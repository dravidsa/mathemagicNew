{"version":3,"sources":["../../src/providers/index.ts","../../src/providers/api/api.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/auth-service/auth-service.ts","../../src/providers/courses-service/courses-service.ts","../../src/providers/get-schools/get-schools.ts","../../src/providers/get-base64-image/get-base64-image.ts","../../src/providers/quiz-service/quiz-service.ts","../../src/providers/items/items.ts","../../src/components/sanitizehtml-pipe/sanitizehtml-pipe.ts","../../src/providers/messages-service/messages-service.ts","../../src/providers/products-service/products-service.ts","../../src/providers/save-order/save-order.ts","../../src/providers/get-billing/get-billing.ts","../../src/providers/tests-service/tests-service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/mocks/providers/items.ts","../../src/models/item.ts","../../src/providers/settings/settings.ts","../../src/providers/user/user.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export { Api } from './api/api';\nexport { Items } from '../mocks/providers/items';\nexport { Settings } from './settings/settings';\nexport { User } from './user/user';\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/index.ts","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ResponseType } from '../../../node_modules/@angular/http';\n\n/**\n * Api is a generic REST Api handler. Set your API url first.\n */\n@Injectable()\nexport class Api {\n  url: string = 'http://ipm-mathemagic.com/api/';\n\n  constructor(public http: HttpClient) {\n    console.log( 'in constructor of api ') ; \n  }\n\n  get(endpoint: string, params?: any, reqOpts?: any ) {\n    console.log( \" in get \") ; \n    if (!reqOpts) {\n      reqOpts = {\n        params: new HttpParams()\n      };\n     \n    }\n\n    // Support easy query params for GET requests\n    if (params) {\n      reqOpts.params = new HttpParams();\n     \n      for (let k in params) {\n        reqOpts.params = reqOpts.params.set(k, params[k]);\n      }\n      console.log ( 'param is ' + JSON.stringify(params )  ) ; \n    }\n    console.log( \" end point is \"+ endpoint)\n    //return this.http.get(this.url + '/' + endpoint, reqOpts);\n    return this.http.get(endpoint, reqOpts);\n  }\n\n  post(endpoint: string, body: any, reqOpts?: any) {\n    console.log( \"got in post \" + \"end point is \" + endpoint , \"body is \" +JSON.stringify( body )+ \"opts are \" + JSON.stringify(reqOpts ) ); \n    return this.http.post( endpoint, JSON.stringify(body ) , reqOpts );\n    //return this.http.post(this.url + '/' + endpoint, body, reqOpts);\n  }\n\n  put(endpoint: string, body: any, reqOpts?: any) {\n    return this.http.put(this.url + '/' + endpoint, body, reqOpts);\n  }\n\n  delete(endpoint: string, reqOpts?: any) {\n    return this.http.delete(this.url + '/' + endpoint, reqOpts);\n  }\n\n  patch(endpoint: string, body: any, reqOpts?: any) {\n    return this.http.patch(this.url + '/' + endpoint, body, reqOpts);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/api.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 134;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 134\n// module chunks = 30","var map = {\n\t\"../pages/buy-product/buy-product.module\": [\n\t\t369,\n\t\t29\n\t],\n\t\"../pages/cards/cards.module\": [\n\t\t341,\n\t\t28\n\t],\n\t\"../pages/content/content.module\": [\n\t\t342,\n\t\t27\n\t],\n\t\"../pages/home/home.module\": [\n\t\t343,\n\t\t26\n\t],\n\t\"../pages/item-create/item-create.module\": [\n\t\t344,\n\t\t25\n\t],\n\t\"../pages/item-detail/item-detail.module\": [\n\t\t347,\n\t\t24\n\t],\n\t\"../pages/list-master/list-master.module\": [\n\t\t345,\n\t\t23\n\t],\n\t\"../pages/login/login.module\": [\n\t\t346,\n\t\t22\n\t],\n\t\"../pages/menu/menu.module\": [\n\t\t348,\n\t\t21\n\t],\n\t\"../pages/payment/payment.module\": [\n\t\t349,\n\t\t20\n\t],\n\t\"../pages/register/register.module\": [\n\t\t350,\n\t\t19\n\t],\n\t\"../pages/school-list/school-list.module\": [\n\t\t351,\n\t\t18\n\t],\n\t\"../pages/search/search.module\": [\n\t\t352,\n\t\t17\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t353,\n\t\t16\n\t],\n\t\"../pages/show-courses/show-courses.module\": [\n\t\t354,\n\t\t15\n\t],\n\t\"../pages/show-messages/show-messages.module\": [\n\t\t355,\n\t\t14\n\t],\n\t\"../pages/show-products/show-products.module\": [\n\t\t356,\n\t\t13\n\t],\n\t\"../pages/show-quiz/show-quiz.module\": [\n\t\t357,\n\t\t12\n\t],\n\t\"../pages/show-tests/show-tests.module\": [\n\t\t358,\n\t\t11\n\t],\n\t\"../pages/signup/signup.module\": [\n\t\t359,\n\t\t0\n\t],\n\t\"../pages/tab-home/tab-home.module\": [\n\t\t360,\n\t\t10\n\t],\n\t\"../pages/tab-products/tab-products.module\": [\n\t\t361,\n\t\t9\n\t],\n\t\"../pages/tab-services/tab-services.module\": [\n\t\t362,\n\t\t8\n\t],\n\t\"../pages/tab-tests/tab-tests.module\": [\n\t\t364,\n\t\t7\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t363,\n\t\t6\n\t],\n\t\"../pages/test-results/test-results.module\": [\n\t\t366,\n\t\t5\n\t],\n\t\"../pages/test-summary/test-summary.module\": [\n\t\t368,\n\t\t4\n\t],\n\t\"../pages/tests-list/tests-list.module\": [\n\t\t370,\n\t\t3\n\t],\n\t\"../pages/tutorial/tutorial.module\": [\n\t\t365,\n\t\t2\n\t],\n\t\"../pages/welcome/welcome.module\": [\n\t\t367,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 185;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 185\n// module chunks = 30","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\nexport class User {\n  name: string;\n  email: string;\n  id : string  ; \n\n \n  constructor(name: string, email: string , id : string ) {\n    this.name = name;\n    this.email = email;\n    this.id = id ; \n  }\n}\n \n@Injectable()\nexport class AuthService {\n  currentUser: User;\n  \n \n  constructor( public api: Api) {} \n\n\n  public login(credentials) {\n    if (credentials.email === null || credentials.password === null) {\n      return Observable.throw(\"Please insert credentials\");\n    } else {\n      return Observable.create(observer => {\n        // At this point make a request to your backend to make a real check!\n\n        var headers = new Headers();\n       // headers.append(\"Accept\", 'application/json');\n        headers.append('Content-Type',  'application/json' );\n        headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n      \n\n      \n        let postData = credentials;  \n\n  const requestOptions = new RequestOptions({ headers: headers} )\n  let access ; \n  this.api.post(\"http://ipm-mathemagic.com/api/userlogin/\", postData, requestOptions) \n    .subscribe(data => { \n      console.log(\"user obj is \" + JSON.stringify(data));  \n      //console.log( \" username \" + data.username + \"email is \"  + data.email)  ; \n      access = true; \n      this.currentUser = new User(data.username , data.email , data.id  );\n\n        localStorage.setItem(\"loggedUser\",this.currentUser.name) ; \n        localStorage.setItem(\"loggedUserId\",this.currentUser.id) ; \n        localStorage.setItem(\"loggedUserEmail\",this.currentUser.email) ; \n        console.log( \" set user in local \" + this.currentUser.name + \"-\" + this.currentUser.id + \"-\"+ this.currentUser.email ) ; \n        \n      //console.log( \"name \" + data.username + \"Mesg\"  + data.Msg) ; \n\n      observer.next(\"Login successful\");\n      /*\n      if ( data.Msg == \"Login successful\")\n      observer.next(\"Login successful\");\n      else \n      observer.next(\"Login failed\");\n      observer.complete();\n    */\n   \n     \n\n     }, error => {\n      console.log(\"got some error \" + JSON.stringify(error));\n      access = false;\n       observer.next(\"failed\");\n       observer.complete();\n    });\n\n\n\n\n        /*\n        access = (credentials.password === \"pass\" && credentials.email === \"email\");\n        this.currentUser = new User('Simon', 'saimon@devdactic.com');\n        observer.next(access);\n        observer.complete();\n        */\n\n      });\n    }\n  }\n \n  public register(credentials) {\n    if (credentials.email === null || credentials.password === null) {\n      return Observable.throw(\"Please insert credentials\");\n    } else {\n      // At this point store the credentials to your backend!\n      return Observable.create(observer => {\n        observer.next(true);\n        observer.complete();\n      });\n    }\n  }\n \n  public getUserInfo() : User {\n    return this.currentUser;\n  }\n \n  public logout() {\n    return Observable.create(observer => {\n      this.currentUser = null;\n      observer.next(true);\n      observer.complete();\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth-service/auth-service.ts","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\n/*\n  Generated class for the TestsServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class CoursesService{\n\n  public courses:  any ; \n\n\n  constructor( public api: Api) {\n    console.log('Hello TestsServiceProvider Provider');\n  }\n\n  public getCoursesForUser( username) { \n \n      return Observable.create(observer => {\n        // At this point make a request to your backend to make a real check!\n        //console.log(  \"getting courses for user\" + username ); \n        var headers = new Headers();\n       // headers.append(\"Accept\", 'application/json');\n        headers.append('Content-Type',  'application/json' );\n        headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n        /*\n        let myParams = new URLSearchParams();\n        myParams.append('username',username);\t\n    let options = new RequestOptions({ headers: headers, params: myParams });\n         */\n\n  console.log(  \"getting courses for user\" + username ); \n  \n  // const requestOptions = new RequestOptions({ headers: headers} )\n  this.api.get(\"http://ipm-mathemagic.com/api/getCourses/?username=\"+'sandra') \n    .subscribe(data => { \n      console.log(JSON.stringify(data));  \n      this.courses = data ; \n\n      observer.next ( \"got courses\") ; \n      observer.complete(); \n  \n      \n     }, error => {\n      console.log(\"got some error \" + JSON.stringify(error));\n     \n       observer.next(\"failed\");\n       observer.complete();\n    });\n\n     })\n    }\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/providers/courses-service/courses-service.ts","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\n\n\n\n/*\n  Generated class for the GetSchoolsProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GetSchoolsService {\nschools : any; \npublic selectedSchoolId : any; \npublic selectedSchoolName : any ; \n\n  constructor(public api: Api) {\n    console.log('Hello GetSchoolsProvider Provider');\n  }\n  public getSchools( schoolName) { \n \n    return Observable.create(observer => {\n      // At this point make a request to your backend to make a real check!\n      //console.log(  \"getting courses for user\" + username ); \n      var headers = new Headers();\n     // headers.append(\"Accept\", 'application/json');\n      headers.append('Content-Type',  'application/json' );\n      headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n      /*\n      let myParams = new URLSearchParams();\n      myParams.append('username',username);\t\n  let options = new RequestOptions({ headers: headers, params: myParams });\n       */\n\nconsole.log(  \"in serivce : getting schools\" + schoolName ); \n\n// const requestOptions = new RequestOptions({ headers: headers} )\nthis.api.get(\"http://ipm-mathemagic.com/api/ipm_get_schools/?school_name=\" + schoolName) \n  .subscribe(data => { \n    console.log(JSON.stringify(data));  \n    this.schools = data ; \n\n    observer.next ( \"got schools\") ; \n    observer.complete(); \n\n    \n   }, error => {\n    console.log(\"got some error \" + JSON.stringify(error));\n   \n     observer.next(\"failed\");\n     observer.complete();\n  });\n\n   })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/get-schools/get-schools.ts","import { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\n/*\n  Generated class for the TestsServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GetBase64ImageService{\n\n  public base64Image:  any ; \n\n\n  constructor( public api: Api) {\n    console.log('Hello GetBase64Image Provider');\n  }\n\n  public getBase64Image( img_url) { \n \n      return Observable.create(observer => {\n        // At this point make a request to your backend to make a real check!\n        //console.log(  \"getting courses for user\" + username ); \n        var headers = new Headers();\n       // headers.append(\"Accept\", 'application/json');\n        headers.append('Content-Type',  'application/json' );\n        //headers.append('Response-Type', 'Blob') ; \n        headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n        /*\n        let myParams = new URLSearchParams();\n        myParams.append('username',username);\t\n    let options = new RequestOptions({ headers: headers, params: myParams });\n         */\n\n  console.log(  \"getting base64 for url\" +img_url ); \n  const params = new HttpParams ( ) ; \n  //params.append ( 'responseType ' , 'blob' ) ; \n\n   const requestOptions = new RequestOptions({ headers: headers}  ) \n  this.api.get(\"http://ipm-mathemagic.com/api/getBase64Image/?img_url=\"+ img_url,null ,  {responseType : 'text'}  ) \n    .subscribe(data => { \n      //console.log(JSON.stringify(data));  \n      this.base64Image = data ; \n\n      observer.next ( img_url) ; \n      observer.complete(); \n  \n      \n     }, error => {\n      console.log(\"got some error  \" + JSON.stringify(error));\n     \n       observer.next(\"failed\");\n       observer.complete();\n    });\n\n     })\n    }\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/providers/get-base64-image/get-base64-image.ts","import { HttpClient } from '@angular/common/http';\n\n\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\n/*\n  Generated class for the QuizServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class QuizService {\n\n  questions : any   ; \n\n  constructor( public api: Api) {\n    console.log('Hello QuizServiceProvider Provider');\n  }\n\n  public getQuestionsForQuiz( testid) { \n \n    return Observable.create(observer => {\n      // At this point make a request to your backend to make a real check!\n      //console.log(  \"getting courses for user\" + username ); \n      var headers = new Headers();\n     // headers.append(\"Accept\", 'application/json');\n      headers.append('Content-Type',  'application/json' );\n      headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n      /*\n      let myParams = new URLSearchParams();\n      myParams.append('username',username);\t\n  let options = new RequestOptions({ headers: headers, params: myParams });\n       */\n\nconsole.log(  \"getting courses for user\" + testid ); \n\n// const requestOptions = new RequestOptions({ headers: headers} )\nthis.api.get(\"http://ipm-mathemagic.com/api/getQuestions/?quizid=\"+testid) \n  .subscribe(data => { \n    console.log(JSON.stringify(data));  \n    this.questions = data ; \n\n    observer.next ( \"got questions\") ; \n    observer.complete(); \n\n    \n   }, error => {\n    console.log(\"got some error \" + JSON.stringify(error));\n   \n     observer.next(\"failed\");\n     observer.complete();\n  });\n\n   })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/quiz-service/quiz-service.ts","import { Injectable } from '@angular/core';\n\nimport { Item } from '../../models/item';\nimport { Api } from '../api/api';\n\n@Injectable()\nexport class Items {\n\n  constructor(public api: Api) { }\n\n  query(params?: any) {\n    console.log( \"in items for params \" + params );\n   return this.api.get('http://ipm-mathemagic.com/api/ipm_get_products/', params);\n  }\n\n  add(item: Item) {\n  }\n\n  delete(item: Item) {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/items/items.ts","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeHtml'\n})\nexport class SanitizeHtmlPipe implements PipeTransform {\n\n  constructor(private _sanitizer:DomSanitizer) {\n   // console.log(  \" in pipe\") ; \n  }\n\n  transform(v:string):SafeHtml {\n   // console.log ( \" trying to transform \"+ v ) ; \n    return this._sanitizer.bypassSecurityTrustHtml(v);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/sanitizehtml-pipe/sanitizehtml-pipe.ts","import { HttpClient } from '@angular/common/http';\n\n\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\n/*\n  Generated class for the MessagesServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class MessagesService {\nmessages : any; \n\n  constructor( public api: Api) {\n    console.log('Hello MessagesServiceProvider Provider');\n  }\n\n\n  public getMessages( ) { \n \n    return Observable.create(observer => {\n      // At this point make a request to your backend to make a real check!\n      //console.log(  \"getting courses for user\" + username ); \n      var headers = new Headers();\n     // headers.append(\"Accept\", 'application/json');\n      headers.append('Content-Type',  'application/json' );\n      headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n      /*\n      let myParams = new URLSearchParams();\n      myParams.append('username',username);\t\n  let options = new RequestOptions({ headers: headers, params: myParams });\n       */\n\nconsole.log(  \"getting messages\" ); \n\n// const requestOptions = new RequestOptions({ headers: headers} )\nthis.api.get(\"http://ipm-mathemagic.com/api/getMessages/\") \n  .subscribe(data => { \n    console.log(JSON.stringify(data));  \n    this.messages = data ; \n\n    observer.next ( \"got messages\") ; \n    observer.complete(); \n\n    \n   }, error => {\n    console.log(\"got some error \" + JSON.stringify(error));\n   \n     observer.next(\"failed\");\n     observer.complete();\n  });\n\n   })\n  }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/messages-service/messages-service.ts","import { HttpClient } from '@angular/common/http';\n\n\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\n/*\n  Generated class for the ProductsServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class ProductsService {\nproducts : any ; \n\n  constructor(public api: Api ) {\n    console.log('Hello ProductsServiceProvider Provider');\n  }\n\n  public getProducts( ) { \n \n    return Observable.create(observer => {\n      // At this point make a request to your backend to make a real check!\n      //console.log(  \"getting courses for user\" + username ); \n      var headers = new Headers();\n     // headers.append(\"Accept\", 'application/json');\n      headers.append('Content-Type',  'application/json' );\n      headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n      /*\n      let myParams = new URLSearchParams();\n      myParams.append('username',username);\t\n  let options = new RequestOptions({ headers: headers, params: myParams });\n       */\n\nconsole.log(  \"getting messages\" ); \n\n// const requestOptions = new RequestOptions({ headers: headers} )\nthis.api.post(\"http://ipm-mathemagic.com/api/ipm_get_products/\",\"\",\"\") \n  .subscribe(data => { \n    console.log(JSON.stringify(data));  \n    this.products = data ; \n\n    observer.next ( \"got products\") ; \n    observer.complete(); \n\n    \n   }, error => {\n    console.log(\"got some error \" + JSON.stringify(error));\n   \n     observer.next(\"failed\");\n     observer.complete();\n  });\n\n   })\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/products-service/products-service.ts","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\n\n \n@Injectable()\nexport class SaveOrderService {\n  \n \n  constructor( public api: Api) {} \n\n\n  public process(orderData) {\n    \n      return Observable.create(observer => {\n        // At this point make a request to your backend to make a real check!\n\n        var headers = new Headers();\n       // headers.append(\"Accept\", 'application/json');\n        headers.append('Content-Type',  'application/json' );\n        headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n       \n  const requestOptions = new RequestOptions({ headers: headers} )\n  let access ; \n  this.api.post(\"http://ipm-mathemagic.com/api/ipm_save_order/\", orderData, requestOptions) \n    .subscribe(data => { \n      console.log(JSON.stringify(data));  \n      \n     \n      //console.log( \"name \" + data.username + \"Mesg\"  + data.Msg) ; \n\n      observer.next(data);\n    \n   \n     \n\n     }, error => {\n      console.log(\"got some error \" + JSON.stringify(error));\n      access = false;\n       observer.next(\"failed\");\n       observer.complete();\n    });\n\n\n\n      });\n    }\n  }\n \n  \n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/save-order/save-order.ts","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\n\n\n\n/*\n  Generated class for the GetSchoolsProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GetBillingService {\nbillingData  : any; \n\n\n  constructor(public api: Api) {\n    console.log('Hello GetBilling  Provider');\n  }\n  public getBillingAddress( userName) { \n \n    return Observable.create(observer => {\n      // At this point make a request to your backend to make a real check!\n      //console.log(  \"getting courses for user\" + username ); \n      var headers = new Headers();\n     // headers.append(\"Accept\", 'application/json');\n      headers.append('Content-Type',  'application/json' );\n      headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n      /*\n      let myParams = new URLSearchParams();\n      myParams.append('username',username);\t\n  let options = new RequestOptions({ headers: headers, params: myParams });\n       */\n\nconsole.log(  \"in serivce : getting address for user \" + userName ); \n\n// const requestOptions = new RequestOptions({ headers: headers} )\nthis.api.get(\"http://ipm-mathemagic.com/api/getBilling/?username=\" + userName) \n  .subscribe(data => { \n    console.log(JSON.stringify(data));  \n    this.billingData = data ; \n\n    observer.next ( \"got billing Info \") ; \n    observer.complete(); \n\n    \n   }, error => {\n    console.log(\"got  some error \" + JSON.stringify(error));\n   \n     observer.next(\"no data\");\n     observer.complete();\n  });\n\n   })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/get-billing/get-billing.ts","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Api } from '../api/api';\n\n/*\n  Generated class for the TestsServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class TestsService{\n\n  public tests : any  ; \n\n\n  constructor( public api: Api) {\n    console.log('Hello TestsServiceProvider Provider');\n  }\n\n  public getTestsForCourse( courseid) { \n  console.log( \" called me \" + courseid ) ; \n    return Observable.create(observer => {\n      // At this point make a request to your backend to make a real check!\n      //console.log(  \"getting courses for user\" + username ); \n      var headers = new Headers();\n     // headers.append(\"Accept\", 'application/json');\n      headers.append('Content-Type',  'application/json' );\n      headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE, PUT');\n      /*\n      let myParams = new URLSearchParams();\n      myParams.append('username',username);\t\n  let options = new RequestOptions({ headers: headers, params: myParams });\n       */\n\nconsole.log(  \"getting tests  for courses\" + courseid ); \n\n// const requestOptions = new RequestOptions({ headers: headers} )\nthis.api.get(\"http://ipm-mathemagic.com/api/getTests/?courseid=\"+courseid) \n  .subscribe(data => { \n    console.log(JSON.stringify(data));  \n    this.tests = data ; \n\n    observer.next ( \"got tests\") ; \n    observer.complete(); \n\n    \n   }, error => {\n    console.log(\"got some error \" + JSON.stringify(error));\n   \n     observer.next(\"failed\");\n     observer.complete();\n  });\n\n   })\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tests-service/tests-service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\nimport {enableProdMode} from '@angular/core';\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Camera } from '@ionic-native/camera';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { IonicStorageModule, Storage } from '@ionic/storage';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { Items } from '../providers/items/items';\n//import { Items } from '../mocks/providers/items';\nimport { Settings, User, Api } from '../providers';\nimport { MyApp } from './app.component';\n\n\nimport { AuthService } from '../providers/auth-service/auth-service';\nimport { QuizService } from '../providers/quiz-service/quiz-service';\nimport { TestsService } from '../providers/tests-service/tests-service';\nimport { ProductsService } from '../providers/products-service/products-service';\nimport { MessagesService } from '../providers/messages-service/messages-service';\nimport { CoursesService } from '../providers/courses-service/courses-service';\nimport { SanitizeHtmlPipe } from '../components/sanitizehtml-pipe/sanitizehtml-pipe';\nimport { GetSchoolsService } from '../providers/get-schools/get-schools';\nimport { SaveOrderService } from '../providers/save-order/save-order';\nimport { GetBillingService } from '../providers/get-billing/get-billing';\nimport { GetBase64ImageService } from '../providers/get-base64-image/get-base64-image';\nimport { InAppBrowser } from '../../node_modules/@ionic-native/in-app-browser';\n//import {  RouterModule,  Routes} from '@angular/router'\n\n// The translate loader needs to know where to load i18n files\n// in Ionic's static asset pipeline.\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function provideSettings(storage: Storage) {\n  /**\n   * The Settings provider takes a set of default settings for your app.\n   *\n   * You can add new settings options at any time. Once the settings are saved,\n   * these values will not overwrite the saved values (this can be done manually if desired).\n   */\n  return new Settings(storage, {\n    option1: true,\n    option2: 'Ionitron J. Framework',\n    option3: '3',\n    option4: 'Hello'\n  });\n}\n\n@NgModule({\n  declarations: [\n    MyApp , \n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot(),\n    \n    \n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp\n  ],\n  providers: [\n    Api,\n    Items,\n    User,\n    Camera,\n    SplashScreen,\n    StatusBar,\n    { provide: Settings, useFactory: provideSettings, deps: [Storage] },\n    // Keep this to enable Ionic's runtime error handling during development\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\n    AuthService,\n    QuizService,\n    TestsService,\n    ProductsService,\n    MessagesService,\n    TestsService,\n    CoursesService , \n    SanitizeHtmlPipe,\n    GetSchoolsService,\n    SaveOrderService,\n    GetBillingService,\n    GetBase64ImageService,\n    InAppBrowser\n\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\n\nimport { Item } from '../../models/item';\n\n@Injectable()\nexport class Items {\n  items: Item[] = [];\n\n  defaultItem: any = {\n    \"name\": \"Burt Bear\",\n    \"profilePic\": \"assets/img/speakers/bear.jpg\",\n    \"about\": \"Burt is a Bear.\",\n  };\n\n\n  constructor() {\n    let items = [\n      {\n        \"name\": \"Burt Bear\",\n        \"profilePic\": \"assets/img/speakers/bear.jpg\",\n        \"about\": \"Burt is a Bear.\"\n      },\n      {\n        \"name\": \"Charlie Cheetah\",\n        \"profilePic\": \"assets/img/speakers/cheetah.jpg\",\n        \"about\": \"Charlie is a Cheetah.\"\n      },\n      {\n        \"name\": \"Donald Duck\",\n        \"profilePic\": \"assets/img/speakers/duck.jpg\",\n        \"about\": \"Donald is a Duck.\"\n      },\n      {\n        \"name\": \"Eva Eagle\",\n        \"profilePic\": \"assets/img/speakers/eagle.jpg\",\n        \"about\": \"Eva is an Eagle.\"\n      },\n      {\n        \"name\": \"Ellie Elephant\",\n        \"profilePic\": \"assets/img/speakers/elephant.jpg\",\n        \"about\": \"Ellie is an Elephant.\"\n      },\n      {\n        \"name\": \"Molly Mouse\",\n        \"profilePic\": \"assets/img/speakers/mouse.jpg\",\n        \"about\": \"Molly is a Mouse.\"\n      },\n      {\n        \"name\": \"Paul Puppy\",\n        \"profilePic\": \"assets/img/speakers/puppy.jpg\",\n        \"about\": \"Paul is a Puppy.\"\n      }\n    ];\n\n    for (let item of items) {\n      this.items.push(new Item(item));\n    }\n  }\n\n  query(params?: any) {\n    if (!params) {\n      return this.items;\n    }\n\n    return this.items.filter((item) => {\n      for (let key in params) {\n        let field = item[key];\n        if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {\n          return item;\n        } else if (field == params[key]) {\n          return item;\n        }\n      }\n      return null;\n    });\n  }\n\n  add(item: Item) {\n    this.items.push(item);\n  }\n\n  delete(item: Item) {\n    this.items.splice(this.items.indexOf(item), 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mocks/providers/items.ts","/**\n * A generic model that our Master-Detail pages list, create, and delete.\n *\n * Change \"Item\" to the noun your app will use. For example, a \"Contact,\" or a\n * \"Customer,\" or an \"Animal,\" or something like that.\n *\n * The Items service manages creating instances of Item, so go ahead and rename\n * that something that fits your app as well.\n */\nexport class Item {\n\n  constructor(fields: any) {\n    // Quick and dirty extend/assign fields to this model\n    for (const f in fields) {\n      // @ts-ignore\n      this[f] = fields[f];\n    }\n  }\n\n}\n\nexport interface Item {\n  [prop: string]: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/item.ts","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n/**\n * A simple settings/config class for storing key/value pairs with persistence.\n */\n@Injectable()\nexport class Settings {\n  private SETTINGS_KEY: string = '_settings';\n\n  settings: any;\n\n  _defaults: any;\n  _readyPromise: Promise<any>;\n\n  constructor(public storage: Storage, defaults: any) {\n    this._defaults = defaults;\n  }\n\n  load() {\n    return this.storage.get(this.SETTINGS_KEY).then((value) => {\n      if (value) {\n        this.settings = value;\n        return this._mergeDefaults(this._defaults);\n      } else {\n        return this.setAll(this._defaults).then((val) => {\n          this.settings = val;\n        })\n      }\n    });\n  }\n\n  _mergeDefaults(defaults: any) {\n    for (let k in defaults) {\n      if (!(k in this.settings)) {\n        this.settings[k] = defaults[k];\n      }\n    }\n    return this.setAll(this.settings);\n  }\n\n  merge(settings: any) {\n    for (let k in settings) {\n      this.settings[k] = settings[k];\n    }\n    return this.save();\n  }\n\n  setValue(key: string, value: any) {\n    this.settings[key] = value;\n    return this.storage.set(this.SETTINGS_KEY, this.settings);\n  }\n\n  setAll(value: any) {\n    return this.storage.set(this.SETTINGS_KEY, value);\n  }\n\n  getValue(key: string) {\n    return this.storage.get(this.SETTINGS_KEY)\n      .then(settings => {\n        return settings[key];\n      });\n  }\n\n  save() {\n    return this.setAll(this.settings);\n  }\n\n  get allSettings() {\n    return this.settings;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/settings/settings.ts","import 'rxjs/add/operator/toPromise';\n\nimport { Injectable } from '@angular/core';\n\nimport { Api } from '../api/api';\n\n/**\n * Most apps have the concept of a User. This is a simple provider\n * with stubs for login/signup/etc.\n *\n * This User provider makes calls to our API at the `login` and `signup` endpoints.\n *\n * By default, it expects `login` and `signup` to return a JSON object of the shape:\n *\n * ```json\n * {\n *   status: 'success',\n *   user: {\n *     // User fields your app needs, like \"id\", \"name\", \"email\", etc.\n *   }\n * }Ø\n * ```\n *\n * If the `status` field is not `success`, then an error is detected and returned.\n */\n@Injectable()\nexport class User {\n  _user: any;\n\n  constructor(public api: Api) { }\n\n  /**\n   * Send a POST request to our login endpoint with the data\n   * the user entered on the form.\n   */\n  login(accountInfo: any) {\n    let seq = this.api.post('login', accountInfo).share();\n\n    seq.subscribe((res: any) => {\n      // If the API returned a successful response, mark the user as logged in\n      if (res.status == 'success') {\n        this._loggedIn(res);\n      } else {\n      }\n    }, err => {\n      console.error('ERROR', err);\n    });\n\n    return seq;\n  }\n\n  /**\n   * Send a POST request to our signup endpoint with the data\n   * the user entered on the form.\n   */\n  signup(accountInfo: any) {\n    let seq = this.api.post('signup', accountInfo).share();\n\n    seq.subscribe((res: any) => {\n      // If the API returned a successful response, mark the user as logged in\n      if (res.status == 'success') {\n        this._loggedIn(res);\n      }\n    }, err => {\n      console.error('ERROR', err);\n    });\n\n    return seq;\n  }\n\n  /**\n   * Log the user out, which forgets the session\n   */\n  logout() {\n    this._user = null;\n  }\n\n  /**\n   * Process a login/signup response to store user data\n   */\n  _loggedIn(resp) {\n    this._user = resp.user;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","import { Component, ViewChild } from '@angular/core';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Config, Nav, Platform } from 'ionic-angular';\n\nimport { FirstRunPage } from '../pages';\nimport { Settings } from '../providers';\n\n@Component({\n  template: `<ion-menu [content]=\"content\">\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Pages</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list>\n        <button menuClose ion-item *ngFor=\"let p of pages\" (click)=\"openPage(p)\">\n          {{p.title}}\n        </button>\n      </ion-list>\n    </ion-content>\n\n  </ion-menu>\n  <ion-nav #content [root]=\"rootPage\"></ion-nav>`\n})\nexport class MyApp {\n\n  rootPage:any = 'LoginPage';\n  //rootPage = FirstRunPage;\n\n  @ViewChild(Nav) nav: Nav;\n\n  pages: any[] = [\n    { title: 'Tutorial', component: 'TutorialPage' },\n    { title: 'Welcome', component: 'WelcomePage' },\n    { title: 'Tabs', component: 'TabsPage' },\n    { title: 'Cards', component: 'CardsPage' },\n    { title: 'Content', component: 'ContentPage' },\n    { title: 'Login', component: 'LoginPage' },\n    { title: 'Signup', component: 'SignupPage' },\n    { title: 'Master Detail', component: 'ListMasterPage' },\n    { title: 'Menu', component: 'MenuPage' },\n    { title: 'Settings', component: 'SettingsPage' },\n    { title: 'Search', component: 'SearchPage' }\n  ]\n\n  constructor(private translate: TranslateService, platform: Platform, settings: Settings, private config: Config, private statusBar: StatusBar, private splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n    this.initTranslate();\n  }\n\n  initTranslate() {\n    // Set the default language for translation strings, and the current language.\n    this.translate.setDefaultLang('en');\n    const browserLang = this.translate.getBrowserLang();\n\n    if (browserLang) {\n      if (browserLang === 'zh') {\n        const browserCultureLang = this.translate.getBrowserCultureLang();\n\n        if (browserCultureLang.match(/-CN|CHS|Hans/i)) {\n          this.translate.use('zh-cmn-Hans');\n        } else if (browserCultureLang.match(/-TW|CHT|Hant/i)) {\n          this.translate.use('zh-cmn-Hant');\n        }\n      } else {\n        this.translate.use(this.translate.getBrowserLang());\n      }\n    } else {\n      this.translate.use('en'); // Set your language here\n    }\n\n    this.translate.get(['BACK_BUTTON_TEXT']).subscribe(values => {\n      this.config.set('ios', 'backButtonText', values.BACK_BUTTON_TEXT);\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}